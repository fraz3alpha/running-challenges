name: Staging Website Builder

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency
concurrency: staging-website-build

# Run this workflow every time a new commit is pushed to any branch apart from the production one (master)
on: 
  push:
    branches-ignore:
      - master
      - gh-pages
      - gh-pages-staging

  workflow_dispatch:
    # Allow it to be run manually - useful for testing?

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  website-builder:
    # Name the Job
    name: Build the website from this repository
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # Use GitHub Actions' cache to shorten build times and decrease load on servers
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      # Prepare the website directory
      - name: Copy dependencies to Website directory
        run: |
          echo `pwd`
          bash ./build/website/copy-assets.sh
          # Make the adjustments needed to refer to this newly build website correctly
          sed -i -e 's/https:\/\/www.running-challenges.co.uk/https:\/\/staging.running-challenges.co.uk/' website/_config.yml
          sed -i -e 's/Running Challenges/Running Challenges - Staging (${{ github.ref_name }})/' website/_config.yml
          sed -i -e 's/baseurl: ""/baseurl: "\/${{ github.ref_name }}\/"/' website/_config.yml
          cat website/_config.yml
        shell: bash

      # Standard usage of the plugin as described on https://jekyllrb.com/docs/continuous-integration/github-actions/
      # on 2021-01-31
      # https://github.com/marketplace/actions/jekyll-actions
      - name: Build the Jekyll site for branch ${{ github.ref_name }}
        uses:  helaili/jekyll-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          jekyll_src: 'website'
          jekyll_env: production
          # Lets try pushing it to a staging branch, and then using another action to sync the staging repository with this branch
          target_branch: gh-pages-staging
          target_path: ${{ github.ref_name }}
          keep_history: true

      # Then we need to prune any directories that don't match to currently active branches

      # Get the latest copy of the repo 
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: gh-pages-staging
          path: gh-pages-staging

      - name: Reconcile branches
        id: reconcile-branches
        run: |
          git ls-remote --heads | awk '{print $2}' | awk -F 'refs/heads/' '{print $2}' | sort > running-challenges-branches.txt
          echo "All branches: $(cat running-challenges-branches.txt)"
          find gh-pages-staging -mindepth 1 -maxdepth 1 -type d -printf '%P\n' | sort | grep -v '.git' > gh-pages-branches.txt
          echo "Built branches: $(cat gh-pages-branches.txt)"
          # Find the lines only in the gh-pages branches file (note files must be sorted for comm to work)
          comm -23 gh-pages-branches.txt running-challenges-branches.txt > prune-branches.txt
          echo "Built branches to delete: $(cat prune-branches.txt | tr '\n' ' ')"
          echo "::set-output name=BRANCHES_TO_PRUNE::'$(cat prune-branches.txt | tr '\n' ' ')'"

        shell: bash

      - name: Print branches to delete
        run: |
          echo "${{ steps.reconcile-branches.outputs.BRANCHES_TO_PRUNE }}"
        shell: bash

      # ...and then use the action as you would normally do, but providing the path to the repo
      - name: Remove directores, commit and push
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Removing orphaned branches'
          remove: "-r ${{ steps.reconcile-branches.outputs.BRANCHES_TO_PRUNE }}"
          cwd: './gh-pages-staging/'

      # Then we need to sync the contents to another repository so they appear on the staging site